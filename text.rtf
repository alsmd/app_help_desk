{\rtf1\ansi\ansicpg1252\deff0\nouicompat{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 6.3.9600}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\qc\b\f0\fs44\lang22 APP\b0\fs32\par

\pard\sa200\sl276\slmult1 aula 1\par
*na configura\'e7\'e3o do apache podemos defirnir a ordem dos arquivos que ser\'e3o carregados por default, basta acessar a parte do DirectoryIndex.\par
*Sempre que existir uma requisi\'e7\'e3o existira uma resposta, mas nesse canal de comunica\'e7\'e3o \'e9 possivel enviar e receber informa\'e7\'f5es\par
\b enviar dados por formularios\par
\par
\b0 *action \'e9 o destino do submit de um formulario, quando clickamos no submit o brownser encapsula as informa\'e7\'f5es do formulario e dispara essas informa\'e7\'f5es atravez de uma requisi\'e7\'e3o http para o servidor, com isso no lado do servidor \'e9 possivel recuperar esses parametros, efetuar/ou n\'e3o a tratativa desses parametros e retornar uma resposta para o cliente(tudo isso por baixo dos panos)\par
*O brownser com a inteligencia de recuperar esses dados e formar uma requisi\'e7\'e3o http preenchendo o cabecalho e o corpo dessa requisi\'e7\'e3o durante o request e o Apache do outro lado \'e9 capaz de receber essa requisi\'e7\'e3o submeter para o script receber o retorno do script e opcionalmente retornar o arquivo para o cliente\par
*SGI \'e9 a comunica\'e7\'e3o entre o Apache e a linguagem de programa\'e7\'e3o\par
\b GET/POST\par
get\b0\par
*no input o name ira receber o valor contido no campo, essas informa\'e7\'f5es ser\'e3o encapsuladas pelo brownser e disparada juntamente com a requisi\'e7\'e3o\par
*Quando n\'e3o estamos  definindo um metodo de envio no formulario por  padr\'e3o esse envio sera feito utilizando o metodo GET, oque significa que as informa\'e7\'f5es do formuario ser\'e3o encaminhadas para o servidor apartir da propria url \par
*para recuperarmos os dados da url podemos utilizar uma super global chamada $_GET .Ela \'e9 uma array, e cada parametro encaminhado na url se transforma em um indice \par
*os indices da super global $_GET \'e9 definido de acordo com os names atribuidos aos campos que s\'e3o enviados como parametros no momento do request \fs22\par
\fs32 *O resultado que temos no brownser \'e9 uma resposta HTML proveniente da interpreta\'e7\'e3o do nosso script que \'e9 destinada ao Apache que devolve a informa\'e7\'e3o para o brownser, \'e9 justamente essa dinamica que da origem a cria\'e7\'e3o de paginas web dinamicas,isso pq a pagina web \'e9 criada de forma dinamica em tempo de processamento\par
post\par
*anexa os dados do formulario dentro da propria requisi\'e7\'e3o, retirando portanto esses dados da url \par
*assim como o get, podemos recuperar os dados atravez da super global $_POST\par
aula 2\par
\b Autenticando Usuario\par
\b0 *header('Location: index.php?login=erro') //fun\'e7\'e3o nativa do php para redirecionar a pagina, podemos tambem enviar parametros pelo get\par
*isset(array[indice]) //verifica se um determinado indice de um array foi setado\par
aula 3\par
\b Protegendo paginas restritas com SESSION \b0 (rotas protegidas)\par
*session_start(); // para iniciar a sess\'e3o, \'e9 importante que o comando fique nates de qualquer output de dados\par
*s\'e3o variaveis criadas no lado do servidor que ficam disponiveis para brownsers clientes\par
*$_SESSION //super global, \'e9 uma array onde os seus valores podem ser acessados por outras paginas\par
*cada instancia possui uma session\par
*cada session por default dura 3h\par
*do lado do servidor uma regi\'e3o da memoria sera dedicada para uma determinada instancia do navegador, sempre que essa instancia do navegador realizar requisi\'e7\'f5es o identificador unico dessa instancia do lado do servidor sera encaminhado na requisi\'e7\'e3o e a propria linguagem tem a inteligencia para recuperar essa  identifica\'e7\'e3o unica e abrir essa sess\'e3o exclusiva para esse navegador, permitindo que as variaveis dessa sess\'e3o sejam recuperadas\par
aula 4\par
\b Incorporando scripts com include, include_once, require e require_once(s\'e3o construtores)\b0\par
*podemos incorporar determinados scripts dentro de outros scripts\par
*como s\'e3o construtores podemos omitir os parenteses, \par
include "script.php"\par
*\b include("script.php")\b0 ;\par
*pode ser adicionado em qualquer parte do nosso script\par
*quando ele n\'e3o acha o script que estamos tentando adicionar ele gera um warring(gera apenas um alerta, o processamento do script n\'e3o \'e9 afetado)\par
\par
*\b require "script.php"\b0\par
*quando ele n\'e3o acha o script que estamos tentando adicionar ele gera um fatal error(interrompe completamente o funcionamento do script)\par
\b *include_once e require_once\par
\b0 *mesmo comportamento do include e require respectivamente, tendo como diferen\'e7a a inclus\'e3o do script apenas uma vez\par
*caso tentarmos importar o mesmo aquirvo mais de uma vez em um mesmo script as inclus\'f5es apartir da segunda requisi\'e7\'e3o ser\'e3o desconsideradas\par
aula 5\par
\b Encerrando a sess\'e3o\par
\b0 *temos dois modos de lidar com a remo\'e7\'e3o da sess\'e3o, removendo seus indices do array de sess\'e3o ou  destruindo a variavel de sess\'e3o\par
*para remover os indices um a um basta utilizar a fun\'e7\'e3o nativa do php unset(array[indice]) que espera como parametro o array e o indice que sera eliminado\par
*unset tem a inteligencia de remover o indice apenas se o mesmo existir, impedindo possiveis erros\par
*session_destroy()//remove todos os indices contidos em $_SEESSION\par
*mesmo apos o destroy nos ainda teremos acesso as variaveis de session pois a requisi\'e7\'e3o ja foi realizada, apenas apos a proxima session que sera possivel notar a mudan\'e7a. Por conta disso \'e9 muito comum for\'e7ar um redirecionamento apos o uso do session_destroy\par
aula 6\par
\b Registrando chamados\par
\b0 *utilizar arquivo txt\par
*podemos utilizar os metodos get e post para enviar os dados para o servidor\par
*\b fopen\b0 ('nome','a\'e7\'e3o que sera tomada')// para abrir um novo arquivo, caso esse aquivo n\'e3o exista ele sera criado(https://www.php.net/manual/en/function.fopen.php)\par
*recuperamos os dados do formulario com o POST  e tranformamos em uma string, em que cada valor sera separado por #\fs22\par
\fs32 *fwrite('referencia do arquivo','oque sera escrito')\fs22\par
\fs32 *fclose('referencia do arquivo aberto') // fechar arquivo\par
*ao salvar os dados no texto as informa\'e7\'f5es ficariam na mesma linha, assim n\'e3o podendo diferenciar um chamado do outro\par
*podemos utilizar a constante do php \b PHP_EOL \b0 , que armazena o caracter de quebra de linha de acordo com o sistema operacional que o php esta rodando\par
*desta forma podemos saber quando que um determinado chamado termina e o proximo come\'e7a\par
aula 7\par
\b Consultando chamados\par
\fs44 feof() e fgets()\par
\b0\fs32 //teste pelo fim de um arquivo, ela percorre um determinado arquivo recuperando cada uma de suas linhas ate identificar um END OF FILE\par
*na pratica iremos ter um ponteiro que ira ler cada uma das linhas ate que seja encontrado o final do arquivo\fs22\par
\fs32 *ela retorna verdadeiro quando encontrar o final do arquivo\par
*para recuperar as linhas podemos usar o \b fgets\b0 () encaminhando como parametro a referencia do arquivo que esta aberto para leitura nesse momento\par
*por traz o php esta gerenciando toda essa abertura do arquivo para nos, logo temos a referencia do arquivo aberta e quando executamos a fun\'e7\'e3o \b feof() \b0 estamos possisionando o cursor do php na primeira linha desse arquivo para verificar se \'e9 ou nao o end of file. O \b fgets() \b0 tem a inteligencia de com base no arquivo e na posi\'e7\'e3o do cursor recuperar oque estiver na linha ate uma  quantidade de bits que pode ser informada como segundo parametro ou ate encontrar o final da linha\par
*quando a fun\'e7\'e3o \b feof() \b0 realizar o segundo teste, na pratica o ponteiro sera reajustado para a segunda linha, e isso ira se repetir ate que o end of file seja encontrado\par
*\'e9 importante entender que por traz o php esta gerenciando esse arquivo que esta aberto na logica da aplica\'e7\'e3o\par
____________________________________________________\par
aula 8\par
Aplicando controle de perfil de usuarios\par
*trim() para remover espa\'e7os extras na string\par
*rtrim e ltrim, remover da direita ou esquerda\fs22\par
}
 